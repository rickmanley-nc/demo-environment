---
- name: Check to see if Satellite is answering
  uri:
      url: "https://{{ satellite_hostname }}/api/organizations"
      user: "{{ satellite_admin_username }}"
      password: "{{ satellite_admin_password }}"
      force_basic_auth: yes
  register: satellite_is_installed
  ignore_errors: yes
  tags: satellite

- name: Set the 'satellite_is_installed' variable
  set_fact:
    satellite_is_installed: "{{ False if satellite_is_installed.failed | default(False) or satellite_is_installed.status != 200 else True }}"
  tags: satellite

- name: Set hostname
  command: hostnamectl set-hostname {{ satellite_hostname }}
  tags: satellite

- name: Start and Enable firewalld
  systemd: name=firewalld state=started enabled=yes
  when: not satellite_is_installed
  tags: satellite

- name: Configure firewalld
  firewalld:
    port: "{{ item }}"
    permanent: true
    immediate: yes
    state: enabled
  with_items: "{{ satellite_ports }}"
  when: not satellite_is_installed
  tags: satellite

- name: Download /etc/hosts file from Laptop
  get_url:
    url: http://{{ laptop_ip }}/hosts
    dest: /etc/hosts
    mode: 0644
    backup: yes
    force: yes
  when: not satellite_is_installed
  tags: satellite

- name: Register to RHN and attach Satellite SKU through Activation Key
  redhat_subscription:
    state: present
    activationkey: "{{ satellite_activation_key }}"
    org_id: "{{ rhn_org_id }}"
  when: not satellite_is_installed
  tags: satellite

- name: Disable All Repositories
  command: subscription-manager repos --disable "*"
  when: not satellite_is_installed
  tags: satellite

- name: Enable Satellite repositories
  command: /usr/sbin/subscription-manager repos --enable="{{item}}"
  with_items: "{{ satellite_repos }}"
  when: not satellite_is_installed
  tags: satellite

- name: Install 'satellite' and 'ipa-client' RPMs
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - satellite
    - ipa-client
    - puppet-foreman_scap_client
  when: not satellite_is_installed
  tags: satellite

- name: Foreman Template
  template:
    src: "../templates/foreman.yml.j2"
    dest: /etc/hammer/cli.modules.d/foreman.yml
    mode: 0755
  tags: satellite

#- name: Run satellite-installer (without DHCP, DNS, TFTP)
#  shell: satellite-installer -v --scenario satellite --foreman-initial-organization "{{satellite_organization}}" --foreman-initial-location "{{satellite_location}}" --foreman-admin-password "{{satellite_admin_password}}"
#  when: not satellite_is_installed
#  tags: satellite

#- name: Run satellite-installer (with DHCP and TFTP, without DNS) Unable to PXE without DNS server to verify satellite.rnelson-demo.com. Possibly IdM's DNS, but did that fail? to resolve dl.fedoraproject.org while successfully resolving fedoraproject.org during the EPEL GPG key download. Need to test hosting GPG key instead of attempting to download.
#  shell: satellite-installer -v --scenario satellite --foreman-initial-organization "{{satellite_organization}}" --foreman-initial-location "{{satellite_location}}" --foreman-admin-password "{{satellite_admin_password}}" --foreman-proxy-dhcp true --foreman-proxy-dhcp-interface ens3 --foreman-proxy-dhcp-range "192.168.126.150 192.168.126.200" --foreman-proxy-dhcp-gateway 192.168.126.1 --foreman-proxy-dhcp-nameservers 192.168.126.2 --foreman-proxy-tftp true --foreman-proxy-tftp-servername "{{satellite_hostname}}" --capsule-puppet true --foreman-proxy-puppetca true --enable-foreman-plugin-openscap
#  when: not satellite_is_installed
#  tags: satellite

- name: Run satellite-installer (with DHCP, TFTP, DNS)
  shell: satellite-installer -v --scenario satellite --foreman-initial-organization "{{satellite_organization}}" --foreman-initial-location "{{satellite_location}}" --foreman-admin-password "{{satellite_admin_password}}" --foreman-proxy-dns true --foreman-proxy-dns-interface ens3 --foreman-proxy-dns-zone "{{satellite_domain}}" --foreman-proxy-dns-forwarders 192.168.126.1 --foreman-proxy-dns-reverse 126.168.192.in-addr.arpa --foreman-proxy-dhcp true --foreman-proxy-dhcp-interface ens3 --foreman-proxy-dhcp-range "192.168.126.150 192.168.126.200" --foreman-proxy-dhcp-gateway 192.168.126.1 --foreman-proxy-dhcp-nameservers 192.168.126.2 --foreman-proxy-tftp true --foreman-proxy-tftp-servername $(hostname) --capsule-puppet true --foreman-proxy-puppetca true --enable-foreman-plugin-openscap
  when: not satellite_is_installed
  tags: satellite

- name: Update resolv.conf to have Satellite point to itself for DNS resolution
  lineinfile:
    path: /etc/resolv.conf
    regexp: 'nameserver'
    line: 'nameserver 192.168.126.2'
    state: present
    backrefs: yes
  when: not satellite_is_installed
  tags: satellite

- name: Download Manifest from Laptop
  get_url:
    url: http://{{ laptop_ip }}/{{ satellite_manifest_filename }}
    dest: /root/manifest.zip
  tags: satellite

- name: Upload Manifest
  command: hammer subscription upload --organization "{{satellite_organization}}" --file /root/manifest.zip
  tags: satellite

- name: Enable "Lazy Sync" on-demand policy for all Repositories
  command: hammer settings set --name default_download_policy --value on_demand
  tags: satellite

- name: Enable RHEL 7 Server
  command: hammer repository-set enable --organization "{{satellite_organization}}" --product 'Red Hat Enterprise Linux Server' --basearch='x86_64' --releasever='7Server' --name 'Red Hat Enterprise Linux 7 Server (RPMs)'
  tags: satellite

- name: Enable RHEL 7.4 Kickstart
  command: hammer repository-set enable --organization "{{satellite_organization}}" --product 'Red Hat Enterprise Linux Server' --basearch='x86_64' --releasever='7.4' --name 'Red Hat Enterprise Linux 7 Server (Kickstart)'
  tags: satellite

- name: Change RHEL 7.4 Kickstart download policy to 'Immediate' (Kickstart must be Immediate, otherwise Provisioning fails)
  command: hammer repository update --organization "{{satellite_organization}}" --product 'Red Hat Enterprise Linux Server' --name 'Red Hat Enterprise Linux 7 Server (Kickstart)' --download-policy immediate
  tags: satellite

- name: Enable Satellite Tools 6.2 (for RHEL 7 Server)
  command: hammer repository-set enable --organization "{{satellite_organization}}" --product 'Red Hat Enterprise Linux Server' --basearch='x86_64' --name 'Red Hat Satellite Tools 6.2 (for RHEL 7 Server) (RPMs)'
  tags: satellite

- name: Download EPEL GPG Key for version 7 from upstream
  get_url:
    url: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    dest: /root/RPM-GPG-KEY-EPEL-7
  tags: satellite

- name: Create EPEL GPG Key
  command: hammer gpg create --key /root/RPM-GPG-KEY-EPEL-7  --name 'GPG-EPEL-7' --organization "{{satellite_organization}}"
  tags: satellite

- name: Create EPEL Product
  command: hammer product create --name='Extra Packages for Enterprise Linux' --organization "{{satellite_organization}}" --description 'Extra Packages for Enterprise Linux'
  tags: satellite

- name: Create EPEL Repository
  command: hammer repository create --name='EPEL 7 - x86_64' --organization "{{satellite_organization}}" --product='Extra Packages for Enterprise Linux' --content-type='yum' --publish-via-http=true --url=http://dl.fedoraproject.org/pub/epel/7/x86_64/ --checksum-type=sha256 --gpg-key=GPG-EPEL-7
  tags: satellite

- name: Create Daily Sync Plan
  raw: hammer sync-plan create --name 'Daily Sync' --description 'Daily Synchronization Plan' --organization "{{satellite_organization}}" --interval daily --sync-date $(date +"%Y-%m-%d")" 00:00:00" --enabled yes
  tags: satellite

- name: Add RHEL Product and EPEL Products to Sync Plan
  command: hammer product set-sync-plan --name "{{ item }}" --organization "{{satellite_organization}}" --sync-plan 'Daily Sync'
  with_items:
    - "Red Hat Enterprise Linux Server"
    - "Extra Packages for Enterprise Linux"
  tags: satellite

- name: Sync Red Hat base repositories
  command: hammer repository synchronize --organization "{{satellite_organization}}" --product 'Red Hat Enterprise Linux Server' --name '{{ item }}'
  with_items:
    - "Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    - "Red Hat Enterprise Linux 7 Server Kickstart x86_64 7.4"
    - "Red Hat Satellite Tools 6.2 for RHEL 7 Server RPMs x86_64"
  tags: satellite

- name: Sync EPEL repositories
  command: hammer repository synchronize --organization "{{satellite_organization}}" --product 'Extra Packages for Enterprise Linux' --name 'EPEL 7 - x86_64'
  tags: satellite

- name: Create Development Environment
  command: hammer lifecycle-environment create --organization "{{satellite_organization}}" --description 'Development' --name 'Development' --label development --prior Library
  tags: satellite

- name: Create Acceptance Environment
  command: hammer lifecycle-environment create --organization "{{satellite_organization}}" --description 'Acceptance' --name 'Acceptance' --label acceptance --prior 'Development'
  tags: satellite

- name: Create Production Environment
  command: hammer lifecycle-environment create --organization "{{satellite_organization}}" --description 'Production' --name 'Production' --label production --prior 'Acceptance'
  tags: satellite

- name: Create RHEL 7 Base Content View
  command: hammer content-view create --organization "{{satellite_organization}}" --name 'RHEL7_Base' --label rhel7_base --description 'Core Build for RHEL 7'
  tags: satellite

- name: Create EPEL Content View
  command: hammer content-view create --organization "{{satellite_organization}}" --name 'EPEL' --label epel --description 'Contains only Extra Packages for Enterprise Linux repository'
  tags: satellite

- name: Add RHEL Repositories to RHEL 7 Base Content View
  command: hammer content-view add-repository --organization "{{satellite_organization}}" --name 'RHEL7_Base' --product 'Red Hat Enterprise Linux Server' --repository '{{ item }}'
  with_items:
    - "Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    - "Red Hat Enterprise Linux 7 Server Kickstart x86_64 7.4"
    - "Red Hat Satellite Tools 6.2 for RHEL 7 Server RPMs x86_64"
  tags: satellite

- name: Add EPEL Repository to EPEL Content View
  command: hammer content-view add-repository --organization "{{satellite_organization}}" --name 'EPEL' --product 'Extra Packages for Enterprise Linux' --repository 'EPEL 7 - x86_64'
  tags: satellite

#- name: Create Content View Filter (include all packages without errata)
#  command: hammer content-view filter create --organization "{{satellite_organization}}" --content-view EPEL --name "All packages without errata" --inclusion true --type rpm
#  tags: satellite

#- name: Call API to check the "Include all packages without errata" box on the previously created Content View Filter
#GO INTO WEBUI and check the box for "Include all packages without errata" box on this filter. Hammer can't do this, but there is an API call to change "original_packages" to true... I just don't know how to do API scripts yet.
#https://satellite.demo.com/katello/api/v2/content_view_filters/4
#https://satellite.demo.com/katello/api/v2/content_views/3/filters/4
#curl -X GET -s -k -u admin:redhat https://satellite.rnelson-demo.com/katello/api/v2/content_view_filters/1
# the following doesn't work:
# curl -H "Accept:application/json,version=2" -H "Content-Type:application/json" -X POST -u admin:redhat -k -d "{\"original_packages\" : false}" https://satellite.rnelson-demo.com/katello/api/v2/content_views/3/filters/1

#- name: Create Content View Filter (All errata until Aug 1, 2017)
#  command: hammer content-view filter create --organization "{{satellite_organization}}" --content-view EPEL --name "All errata until Aug 1, 2017" --inclusion true --type erratum
#  tags: satellite

#- name: Create Rule for Filter (All errata until Aug 1, 2017)
#  command: hammer content-view filter rule create --organization "{{satellite_organization}}" --content-view EPEL --content-view-filter "All errata until Aug 1, 2017" --types enhancement,bugfix,security --end-date 2017-08-01
#  tags: satellite

#- name: Create Content View Filter (Exclude Puppet packages)
#  command: hammer content-view filter create --organization "{{satellite_organization}}" --content-view EPEL --name "Exclude Puppet packages" --inclusion false --type rpm
#  tags: satellite

#- name: Create Rule for Filter (Exclude Puppet packages)
#  command: hammer content-view filter rule create --name "puppet*" --organization "{{satellite_organization}}" --content-view EPEL --content-view-filter "Exclude Puppet packages"
#  tags: satellite

#- name: Create Content View Filter (Exclude qpid packages)
#  command: hammer content-view filter create --organization "{{satellite_organization}}" --content-view EPEL --name "Exclude qpid packages" --inclusion false --type rpm
#  tags: satellite

#- name: Create Rule for Filter (Exclude qpid packages)
#  command: hammer content-view filter rule create --name "*qpid*" --organization "{{satellite_organization}}" --content-view EPEL --content-view-filter "Exclude qpid packages"
#  tags: satellite

#until I figure out the API call, here's the manual process to follow:
#hammer content-view filter create --organization RedHat --content-view EPEL --name "All packages without errata" --inclusion true --type rpm
#GO INTO WEBUI and check the box for "Include all packages without errata" box on this filter. Hammer can't do this, but there is an API call to change "original_packages" to true... I just don't know how to do API scripts yet.
#hammer content-view filter create --organization RedHat --content-view EPEL --name "All errata until Aug 1, 2017" --inclusion true --type erratum
#hammer content-view filter rule create --organization RedHat --content-view EPEL --content-view-filter "All errata until Aug 1, 2017" --types enhancement,bugfix,security --end-date 2017-08-01
#hammer content-view filter create --organization RedHat --content-view EPEL --name "Exclude Puppet packages" --inclusion false --type rpm
#hammer content-view filter rule create --name "puppet*" --organization RedHat --content-view EPEL --content-view-filter "Exclude Puppet packages"
#hammer content-view filter create --organization RedHat --content-view EPEL --name "Exclude qpid packages" --inclusion false --type rpm
#hammer content-view filter rule create --name "*qpid*" --organization RedHat --content-view EPEL --content-view-filter "Exclude qpid packages"
#hammer content-view publish --organization RedHat --name EPEL --description 'Added Filters for Aug 1, 2017'

- name: Publish Initial RHEL 7 Base Content View
  command: hammer content-view publish --organization "{{satellite_organization}}" --name RHEL7_Base --description 'Initial Publishing'
  tags: satellite

- name: Publish Initial EPEL Content View
  command: hammer content-view publish --organization "{{satellite_organization}}" --name EPEL --description 'Initial Publishing'
  tags: satellite

- name: Create Development-RHEL Composite Content View (RHEL7_Base + EPEL)
  command: hammer content-view create --composite --organization "{{satellite_organization}}" --name 'Development-RHEL' --label composite_D_rhel7_epel --description 'Combination of RHEL7_Base and EPEL for Development'
  tags: satellite

- name: Add content views to composite content view for Development-RHEL
  command: hammer content-view update --organization "{{satellite_organization}}" --name "Development-RHEL" --component-ids 2,3
  tags: satellite

- name: Publish composite content view Development-RHEL
  command: hammer content-view publish --organization "{{satellite_organization}}" --name Development-RHEL --description 'Initial Publishing'
  tags: satellite

- name: Promote composite content view Development-RHEL
  command: hammer content-view version promote --organization "{{satellite_organization}}" --content-view Development-RHEL --to-lifecycle-environment Development
  tags: satellite

- name: Create RHEL Activation Key for Development guests
  command: hammer activation-key create --organization "{{satellite_organization}}" --description 'Activation Key for guests in Development Environment for RHEL 7 servers' --content-view 'Development-RHEL' --unlimited-hosts --name ak-Reg_To_Development-guest --lifecycle-environment 'Development'
  tags: satellite

- name: Attach subscriptions to Activation Key for Development
  command: hammer activation-key add-subscription --name ak-Reg_To_Development-guest --subscription-id {{ item }} --organization "{{satellite_organization}}"
  with_items: "{{ satellite_subscription_ids }}"
  tags: satellite

- name: Enable Sat Tools channel in Activation Key
  command: hammer activation-key content-override --name ak-Reg_To_Development-guest --organization "{{satellite_organization}}" --content-label rhel-7-server-satellite-tools-6.2-rpms --value 1
  tags: satellite

- name: Update Domain Settings
  command: hammer domain update --name "{{satellite_domain}}" --organizations "{{satellite_organization}}" --locations "{{satellite_location}}"
  tags: satellite

- name: Create Compute Resource (LibVirt)
  command: hammer compute-resource create --description 'LibVirt Compute Resource' --locations "{{satellite_location}}" --name Libvirt_CR --organizations "{{satellite_organization}}" --url 'qemu+tcp://192.168.126.1/system/' --provider libvirt --set-console-password 0
  tags: satellite

- name: Create VLAN_126 subnet
  command: hammer subnet create --name vlan_126 --dhcp-id 1 --dns-id 1 --tftp-id 1 --organizations "{{satellite_organization}}" --domains "{{satellite_domain}}" --locations "{{satellite_location}}" --network 192.168.126.0 --mask 255.255.255.0 --gateway 192.168.126.1 --from 192.168.126.150 --to 192.168.126.200
  tags: satellite

#manually add remote execution capsule. Not listed in hammer, need to find API

- name: Create Host Group for Development.
  command: hammer hostgroup create --architecture x86_64 --content-source-id 1 --content-view Development-RHEL --domain "{{satellite_domain}}" --lifecycle-environment Development --name RHEL7_Development_Servers --organization "{{satellite_organization}}" --puppet-ca-proxy "{{satellite_hostname}}" --puppet-proxy "{{satellite_hostname}}" --subnet vlan_126 --partition-table 'Kickstart default' --operatingsystem 'RedHat 7.4' --medium RedHat/Library/Red_Hat_Server/Red_Hat_Enterprise_Linux_7_Server_Kickstart_x86_64_7_4
  tags: satellite

- name: Set Host Group "RHEL 7 Development Servers" activation keys to "ak-Reg_To_Development-guest"
  command: hammer hostgroup set-parameter --hostgroup "RHEL7_Development_Servers" --name "kt_activation_keys" --value ak-Reg_To_Development-guest
  tags: satellite

- name: Load OpenScap content
  command: foreman-rake foreman_openscap:bulk_upload:default
  tags: satellite

#manually add remote execution snippet to kickstart default finish:
# <%= snippet 'remote_execution_ssh_keys' %>
